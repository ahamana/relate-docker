# syntax=docker/dockerfile:1

ARG NODE_VERSION=22
ARG UV_VERSION=0.6.12
ARG PYTHON_VERSION=3.13
ARG RELATE_HOME=/opt/relate

FROM node:${NODE_VERSION}-alpine AS node

FROM ghcr.io/astral-sh/uv:${UV_VERSION} AS uv

FROM python:${PYTHON_VERSION}-alpine AS builder

ARG GIT_BRANCH=main
ARG RELATE_HOME

COPY --link --from=node /usr/local/bin/node /usr/local/bin/
COPY --link --from=node /usr/local/lib/node_modules /usr/local/lib/node_modules
COPY --link --from=uv /uv /usr/local/bin/

RUN <<EOF
ln -s /usr/local/bin/node /usr/local/bin/nodejs
ln -s /usr/local/lib/node_modules/npm/bin/npm-cli.js /usr/local/bin/npm
ln -s /usr/local/lib/node_modules/npm/bin/npx-cli.js /usr/local/bin/npx

apk add --no-cache \
    alpine-sdk \
    cargo \
    libffi-dev \
    rust

npm update -g npm
EOF

ADD --link https://api.github.com/repos/inducer/relate/git/refs/heads/${GIT_BRANCH} /dev/null
RUN git clone -b ${GIT_BRANCH} --depth 1 https://github.com/inducer/relate.git ${RELATE_HOME}

WORKDIR ${RELATE_HOME}

RUN <<EOF
npm install
npm run build

uv export --frozen -n --no-dev --no-hashes --format requirements-txt -o requirements.txt
uv pip install -n --system \
    -r requirements.txt \
    psycopg2-binary

rm -rf \
    .ci \
    .git \
    .github \
    doc \
    docker-image-run-py \
    frontend \
    tests
rm \
    .editorconfig \
    .eslintrc.js \
    .gitignore \
    .gitlab-ci.yml \
    .gitmodules \
    LICENSE \
    README.rst \
    SECURITY.md \
    TODO \
    collectstatic.sh \
    docker-clean-containers.sh \
    exercise-docker.py \
    local_settings_example.py \
    package*.json \
    pyproject.toml \
    repack-repositories.sh \
    requirements.txt \
    rollup.config.mjs \
    update.sh \
    uv.lock
EOF

COPY --link relate ${RELATE_HOME}

FROM python:${PYTHON_VERSION}-alpine AS runner

ARG RELATE_HOME
ARG RELATE_GROUP_ID=1000
ARG RELATE_USER_ID=1000
ARG RELATE_USER=relate

RUN <<EOF
addgroup -g ${RELATE_GROUP_ID} ${RELATE_USER}
adduser -D -G ${RELATE_USER} -u ${RELATE_USER_ID} -h ${RELATE_HOME} ${RELATE_USER}
EOF

COPY --link --from=builder /usr/local/lib/python${PYTHON_VERSION%.*}/site-packages /usr/local/lib/python${PYTHON_VERSION%.*}/site-packages
COPY --link --from=builder --chown=${RELATE_USER_ID} ${RELATE_HOME} ${RELATE_HOME}

WORKDIR ${RELATE_HOME}

USER ${RELATE_USER}

EXPOSE 8000

CMD [ "python", "manage.py", "runserver", "0:8000" ]
