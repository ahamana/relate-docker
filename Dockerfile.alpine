# syntax=docker/dockerfile:1

ARG NODE_VERSION=lts
ARG UV_VERSION=0.8
ARG PYTHON_VERSION=3.13
ARG RELATE_HOME=/opt/relate

FROM node:${NODE_VERSION}-alpine AS node

FROM ghcr.io/astral-sh/uv:${UV_VERSION} AS uv

FROM python:${PYTHON_VERSION}-alpine AS builder

ARG GIT_BRANCH=main
ARG RELATE_HOME

ENV UV_COMPILE_BYTECODE=true
ENV UV_FROZEN=true
ENV UV_NO_CACHE=true
ENV UV_NO_DEV=true
ENV UV_PROJECT_ENVIRONMENT=/usr/local

COPY --link --from=node /usr/local/bin /usr/local/bin
COPY --link --from=node /usr/local/lib/node_modules /usr/local/lib/node_modules
COPY --link --from=uv /uv /usr/local/bin/

RUN apk add --no-cache \
    alpine-sdk \
    cargo \
    libffi-dev \
    libpq-dev \
    rust

ADD --link https://api.github.com/repos/inducer/relate/git/refs/heads/${GIT_BRANCH} /dev/null
RUN git clone -b ${GIT_BRANCH} --depth 1 https://github.com/inducer/relate.git ${RELATE_HOME}

WORKDIR ${RELATE_HOME}

RUN <<EOF
npm install
npm run build

uv sync --extra postgres

rm -rf \
    .ci \
    .git \
    .github \
    doc \
    docker-image-run-py \
    frontend \
    tests
rm \
    .editorconfig \
    .eslintrc.js \
    .gitlab-ci.yml \
    .gitmodules \
    collectstatic.sh \
    docker-clean-containers.sh \
    exercise-docker.py \
    LICENSE \
    local_settings_example.py \
    package*.json \
    pyproject.toml \
    README.rst \
    repack-repositories.sh \
    rollup.config.mjs \
    SECURITY.md \
    TODO \
    update.sh \
    uv.lock
find \
    -type f \
    \( \
        -name .gitignore \
    -or -name .gitkeep \
    \) \
    -delete
EOF

FROM python:${PYTHON_VERSION}-alpine AS runner

ARG RELATE_HOME
ARG RELATE_GROUP_ID=1000
ARG RELATE_USER_ID=1000
ARG RELATE_USER=relate

RUN <<EOF
apk add --no-cache \
    libgcc \
    libpq

addgroup -g ${RELATE_GROUP_ID} ${RELATE_USER}
adduser -D -G ${RELATE_USER} -u ${RELATE_USER_ID} -h ${RELATE_HOME} ${RELATE_USER}
EOF

COPY --link --from=builder /usr/local/lib/python${PYTHON_VERSION%.*}/site-packages /usr/local/lib/python${PYTHON_VERSION%.*}/site-packages
COPY --link --from=builder --chown=${RELATE_USER_ID} ${RELATE_HOME} ${RELATE_HOME}

WORKDIR ${RELATE_HOME}

USER ${RELATE_USER}

EXPOSE 8000

CMD ["python", "manage.py", "runserver", "0:8000"]
